name: Notify Insider Flow

on:
  schedule:
    - cron: '0 12 * * *'  # 8:00 AM EDT
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install deps
        run: pip install requests

      - name: Send Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python -c "
import json, os, requests
from datetime import datetime, timedelta

try:
  with open('insider_flow.json') as f:
    data = json.load(f)
  top_buys = float(data['top_buys'])
  top_sells = float(data['top_sells'])
  total_buys = float(data['total_buys'])
  total_sells = float(data['top_sells'])

  # Calculate the 5-day date range ending today
  end_date = datetime.today().replace(hour=0, minute=0, second=0, microsecond=0).strftime('%B %d, %Y')  # June 29, 2025
  start_date = (datetime.today() - timedelta(days=5)).replace(hour=0, minute=0, second=0, microsecond=0).strftime('%B %d, %Y')  # June 24, 2025
  date_range = f'{start_date}–{end_date}'  # June 24–June 29, 2025
  print(f'Debug: start_date={start_date}, end_date={end_date}')

  # If-then logic for bias calculation
  if total_buys + total_sells > 0:  # Ensure valid total
    if total_sells > total_buys:  # Then check if sells dominate
      ratio = total_sells / total_buys
      if ratio > 100:  # Then cap extreme dominance
        dominance_factor = 99.99  # Cap to avoid infinity display
        bias_label = 'Sell-Side Dominance'
      else:
        dominance_factor = round(ratio, 2)
        bias_label = 'Sell-Side Dominance'
    elif total_buys > total_sells:  # Then check if buys dominate
      ratio = total_buys / total_sells
      if ratio > 100:  # Then cap extreme dominance
        dominance_factor = 99.99
        bias_label = 'Buy-Side Dominance'
      else:
        dominance_factor = round(ratio, 2)
        bias_label = 'Buy