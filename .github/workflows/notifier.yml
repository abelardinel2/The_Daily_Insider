name: Notify Insider Flow

on:
  schedule:
    - cron: '0 12 * * *'  # 8:00 AM EDT
  workflow_dispatch:

jobs:
  notify:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.10'

      - name: Install deps
        run: pip install requests

      - name: Send Telegram
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TELEGRAM_CHAT_ID: ${{ secrets.TELEGRAM_CHAT_ID }}
        run: |
          python -c "
import json, os, requests
from datetime import datetime, timedelta

try:
  with open('insider_flow.json') as f:
    data = json.load(f)
  top_buys = float(data['top_buys'])
  top_sells = float(data['top_sells'])
  total_buys = float(data['total_buys'])
  total_sells = float(data['total_sells'])

  # Calculate the 5-day date range ending today
  end_date = datetime.today().replace(hour=0, minute=0, second=0, microsecond=0).strftime('%B %d, %Y')  # June 29, 2025
  start_date = (datetime.today() - timedelta(days=5)).replace(hour=0, minute=0, second=0, microsecond=0).strftime('%B %d, %Y')  # June 24, 2025
  date_range = f'{start_date}â€“{end_date}'  # June 24â€“June 29, 2025
  print(f'Debug: start_date={start_date}, end_date={end_date}')

  # Calculate bias with 99% cap for extreme ratios
  total_value = total_buys + total_sells
  if total_sells > total_buys:
    ratio = total_buys / total_sells
    if ratio < 0.01 or total_buys == 0:  # Ensure cap for tiny or zero buys
      sell_pct = 99.0
      buy_pct = 1.0
    else:
      sell_pct = 50.0 + (50.0 * (1 - ratio / 0.01))
      buy_pct = 100.0 - sell_pct
    bias_label = 'Sell-Side Bias'
  elif total_buys > total_sells:
    ratio = total_sells / total_buys
    if ratio < 0.01 or total_sells == 0:
      buy_pct = 99.0
      sell_pct = 1.0
    else:
      buy_pct = 50.0 + (50.0 * (1 - ratio / 0.01))
      sell_pct = 100.0 - buy_pct
    bias_label = 'Buy-Side Bias'
  else:
    buy_pct = 50.0
    sell_pct = 50.0
    bias_label = 'Neutral Bias'

  buy_pct = round(buy_pct, 2)
  sell_pct = round(sell_pct, 2)
  bias_detail = f'{bias_label} ({sell_pct:.2f}% sell, {buy_pct:.2f}% buy) ðŸ‘€'

  # Format the message
  msg = f'''
  ðŸ“Š Insider Flow Summary ({date_range})

  ðŸ’° Top Buys: ${top_buys:,.2f}
  ðŸ’¥ Top Sells: ${top_sells:,.2f}

  ðŸ§® Total Buys: ${total_buys:,.2f} | Total Sells: ${total_sells:,.2f}
  ðŸ“‰ {bias_detail}
  '''

  url = f'https://api.telegram.org/bot{os.getenv('TELEGRAM_BOT_TOKEN')}/sendMessage'
  response = requests.post(url, json={'chat_id': os.getenv('TELEGRAM_CHAT_ID'), 'text': msg})
  response.raise_for_status()
  print('âœ… Telegram sent